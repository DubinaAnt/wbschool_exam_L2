package main

import "fmt"

/*
=== Поиск анаграмм по словарю ===

Напишите функцию поиска всех множеств анаграмм по словарю.
Например:
'пятак', 'пятка' и 'тяпка' - принадлежат одному множеству,
'листок', 'слиток' и 'столик' - другому.

Входные данные для функции: ссылка на массив - каждый элемент которого - слово на русском языке в кодировке utf8.
Выходные данные: Ссылка на мапу множеств анаграмм.
Ключ - первое встретившееся в словаре слово из множества
Значение - ссылка на массив, каждый элемент которого, слово из множества. Массив должен быть отсортирован по возрастанию.
Множества из одного элемента не должны попасть в результат.
Все слова должны быть приведены к нижнему регистру.
В результате каждое слово должно встречаться только один раз.

Программа должна проходить все тесты. Код должен проходить проверки go vet и golint.
*/

func search(arr []string) map[string][]string {
	result := make(map[string][]string)

	for _, item := range arr {
		result[item] = append(result[item], item)
	}

	for _, item := range arr {
		for key := range result {
			if equolsTwoAnagramm(key, item) {
				result[key] = append(result[key], item)
				delete(result, item)

			}
		}
	}

	//по тз: В результате каждое слово должно встречаться только один раз и отсортированной
	for item := range result {
		result[item] = uniqAndSortItems(result[item])
	}

	//по тз : Множества из одного элемента не должны попасть в результат.
	for item := range result {
		if len(result[item]) <= 1 {
			delete(result, item)
		}
	}

	return result
}

func main() {
	arr := []string{"пятак", "пятка", "тяпка", "листок", "слиток", "столик", "qwe", "пятак", "ert", "ert", "abc", "acb",
		"bca"}

	fmt.Println(search(arr))
}
